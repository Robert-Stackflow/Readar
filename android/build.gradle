buildscript {
    ext.kotlin_version = '1.8.0'
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'https://maven.aliyun.com/repository/flutter-plugin' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.apache.commons:commons-math3:3.6.1"
        classpath "com.google.auto.value:auto-value-annotations:1.9"
        classpath "com.google.auto.value:auto-value:1.9"
        classpath "com.google.code.findbugs:jsr305:3.0.2"
        classpath "com.google.errorprone:error_prone_annotations:2.15.0"
        classpath "com.google.guava:guava:31.1-jre"
        classpath "com.google.protobuf:protobuf-java:3.21.5"
        // artifacts for testing only
        classpath "org.mockito:mockito-core:4.7.0"
        classpath "junit:junit:4.13.2"
        classpath "com.google.truth:truth:1.1.3"
        classpath "com.google.truth.extensions:truth-java8-extension:1.1.3"
        classpath "com.google.testparameterinjector:test-parameter-injector:1.8"
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'https://maven.aliyun.com/repository/flutter-plugin' }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
